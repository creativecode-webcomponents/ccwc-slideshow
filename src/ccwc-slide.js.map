{"version":3,"sources":["ccwc-slide.es6"],"names":[],"mappings":"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","file":"ccwc-slide.js","sourcesContent":["class CCWCSlide extends HTMLElement {\n  setProperties() {\n    /**\n     * text regions\n     *\n     * @property txtRegions\n     * @type array\n     */\n      this.txtRegions = [ 'header', 'footer', 'left', 'right', 'center' ];\n\n    /**\n     * image regions\n     *\n     * @property imgRegions\n     * @type array\n     */\n      this.imgRegions = [ 'center', 'center_full' ];\n\n    /**\n     * image base path\n     *\n     * @property imgpath\n     * @type string\n     */\n      this.imgpath = \"\";\n\n    /**\n     * html template base path\n     *\n     * @property htmltemplatepath\n     * @type string\n     */\n      this.htmltemplatepath = \"\";\n  };\n\n  registerElements() {\n    this.dom = {};\n    this.dom.background = this.root.querySelector('#background');\n    this.dom.htmlinclude = this.root.querySelector('#htmlinclude');\n  };\n\n  /**\n   * getter for slide element\n   *\n   * @param {string} class name\n   * @return {array}\n   */\n  getHTMLIncludeElementsByClass(clazz) {\n    return this.dom.htmlinclude.getElementsByClassName(clazz);\n  };\n\n  /**\n   * sets the html content of the slide via an HTML template\n   *\n   * @method set html template\n   * @param {String} template file\n   * @param {object} background properties\n   */\n  setHTML(template) {\n    this.loadResource(this.htmltemplatepath + '/' + template, () => this.onHTMLReceived);\n  };\n\n  /**\n   * on HTML callback for templates\n   *\n   * @method onHTMLRecieved\n   * @param {String} data\n   */\n  onHTMLReceived(data) {\n    this.dom.htmlinclude.innerHTML = data;\n    this.executeScripts(this.dom.htmlinclude);\n  };\n\n  /**\n   * sets the background image of the slide\n   *\n   * @method set background image\n   * @param {String} img\n   * @param {object} background properties\n   */\n  setBackgroundImage(img, props) {\n    if (!props) { props = {}; }\n    if (!props.bounds) { props.bounds = \"contain\"; }\n\n    this.dom.background.style[\"background-size\"] = props.bounds;\n    this.dom.background.style.backgroundImage=\"url(\" + this.resolveImage(img, this.imgpath) + \")\";\n  };\n\n  /**\n   * set image\n   *\n   * @method set image\n   * @param {String} img\n   * @param {String} named region\n   */\n  setImage(img, region ) {\n    var elem = this.root.querySelector('#' + region + '_img');\n    elem.style.backgroundImage = \"url(\" + this.resolveImage(img, this.imgpath) + \")\";\n    this.removeClass(elem, 'hidden');\n  };\n\n  /**\n   * set text\n   *\n   * @method set text\n   * @param {String} text\n   * @param {String} named region\n   */\n  setText(text, region ) {\n    var elem = this.root.querySelector('#' + region + '_txt');\n    elem.innerHTML = text;\n    this.removeClass(elem, 'hidden');\n  };\n\n\n  /**\n   * clear slide\n   *\n   * @method clear\n   */\n  clear() {\n    this.clearBackgroundImage();\n    this.clearText();\n    this.clearImages();\n    this.clearHTMLTemplate();\n  };\n\n  /**\n   * clear text\n   *\n   * @method clear all text in regions\n   */\n  clearText() {\n    this.txtRegions.forEach( rg => {\n      var elem = this.root.querySelector('#' + rg + '_txt');\n      elem.innerHTML = \"\";\n      this.addClass(elem, 'hidden');\n    });\n  };\n\n  /**\n   * clear images\n   *\n   * @method clear all images in regions\n   */\n  clearImages() {\n    var self = this;\n    this.imgRegions.forEach( rg => {\n      var elem = this.root.querySelector('#' + rg + '_img');\n      elem.style.backgroundImage = null;\n      this.addClass(elem, 'hidden');\n    });\n  };\n\n  /**\n   * clear background image\n   *\n   * @method clear background image\n   */\n  clearBackgroundImage() {\n    this.dom.background.style.backgroundImage = null;\n  };\n\n  /**\n   * clear html template\n   *\n   * @method clear html template\n   */\n  clearHTMLTemplate() {\n    this.dom.htmlinclude.innerHTML = \"\";\n  };\n\n  /**\n   * add a class to an element\n   *\n   * @method addClass\n   * @param {object} element\n   * @param {string} class\n   */\n  addClass(elem, cls) {\n    var classes = elem.getAttribute('class');\n    var clist = classes.split(' ');\n    if (clist.indexOf(cls) < 0) {\n      clist.push(cls);\n      elem.setAttribute('class', clist.join(' '));\n    }\n  };\n\n  /**\n   * add a class to an element\n   *\n   * @method addClass\n   * @param {object} element\n   * @param {string} class\n   */\n  removeClass(elem, cls) {\n    var classes = elem.getAttribute('class');\n    var clist = classes.split(' ');\n    if (clist.indexOf(cls) >= 0) {\n      clist.splice(clist.indexOf(cls), 1)\n      elem.setAttribute('class', clist.join(' '));\n    }\n  };\n\n  /**\n   * resolve an image\n   *\n   * @method resolve image\n   * @param {string} img\n   * @param {string} base path\n   */\n  resolveImage(img, base) {\n    if (img.substr(0, 4) == \"http\") {\n      return img;\n    }\n    if (img.substr(0, 4) == \"file\") {\n      return img;\n    }\n\n    return base + \"/\" + img;\n  };\n\n  /**\n   * load a resource (whether through local filesystem or AJAX)\n   *\n   * @method loadResource\n   * @param {string} resource\n   * @param {function} callback\n   */\n  loadResource(resource, cb) {\n    var self = this;\n    var response;\n    var fs = require('fs');\n\n    if (fs) { // are we using node?\n      response = fs.readFileSync(resource);\n      cb.apply(self, [response]);\n      return;\n    }\n\n    var xmlhttp = new XMLHttpRequest();\n    xmlhttp.onreadystatechange = function() {\n      if (xmlhttp.readyState == 4 ) {\n        if(xmlhttp.status == 200) {\n          response = xmlhttp.responseText;\n        } else {\n          response = '<span>Slide Content is missing, please check your path</span>';\n        }\n        cb.apply(self, [response]);\n      }\n    };\n    //xmlhttp.open(\"GET\", \"slides/htmlincludes/\" + template, true);\n    xmlhttp.open(\"GET\", resource, true);\n    xmlhttp.send();\n  };\n\n  /**\n   * execute scripts on loaded HTML\n   *\n   * @method executeScripts\n   * @param {object} node\n   */\n  executeScripts(node) {\n    if ( node.nodeName == \"SCRIPT\" ) {\n      var script = document.createElement(\"script\");\n      script.text = node.innerHTML;\n      node.parentNode.replaceChild(script, node);\n    } else {\n      var i = 0;\n      var children = node.childNodes;\n      while ( i < children.length) {\n        this.executeScripts( children[i] );\n        i++;\n      }\n    }\n    return node;\n  }\n\n\n  // Fires when an instance was removed from the document.\n  detachedCallback() {};\n\n  // Fires when an attribute was added, removed, or updated.\n  attributeChangedCallback(attr, oldVal, newVal) {};\n\n  /**\n   * parse attributes on element\n   */\n  parseAttributes() {};\n\n\n  // Fires when an instance of the element is created.\n  createdCallback() {\n    this.setProperties();\n    this.parseAttributes();\n  };\n\n  // Fires when an instance was inserted into the document.\n  attachedCallback() {\n    let template = this.owner.querySelector('template');\n    let clone = document.importNode(template.content, true);\n    this.root = this.createShadowRoot();\n    this.root.appendChild(clone);\n    this.registerElements();\n  };\n\n}\n\nif (document.createElement('ccwc-slide').constructor !== CCWCSlide) {\n  CCWCSlide.prototype.owner = (document._currentScript || document.currentScript).ownerDocument;\n  document.registerElement('ccwc-slide', CCWCSlide);\n}\n"],"sourceRoot":"/source/"}